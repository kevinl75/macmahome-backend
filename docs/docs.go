// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Kevin L",
            "email": "\u003ckevin.letupe@gmail.com\u003e"
        },
        "license": {
            "name": "Apache License",
            "url": "http://www.apache.org/licenses/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/note": {
            "get": {
                "description": "Permit to return all the Note entities.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "GET /note",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Note"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "description": "Permit to create a new note entity from a JSON object. Note could be linked",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "POST /note",
                "parameters": [
                    {
                        "description": "New note to create",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permit to update a note entity with a JSON object. Return the updated entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "PATCH /note",
                "parameters": [
                    {
                        "description": "Updated note entity",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/note/:id": {
            "get": {
                "description": "Permit to return a Note entity based on its id.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "GET /note/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the note to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to return not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permit to delete a note based on its id. Return the deleted entity.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "DELETE /note/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the note to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "Permit to return all the Project entities.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "GET /project",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Project"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "description": "Permit to create a new project entity from a JSON object. Return the created entity. If",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "POST /project",
                "parameters": [
                    {
                        "description": "New project to create",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permit to update a project entity with a JSON object. Return the updated entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "PATCH /project",
                "parameters": [
                    {
                        "description": "Updated project entity",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/project/:id": {
            "get": {
                "description": "Permit to return a Project entity based on its id. Return",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "GET /project/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the project to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to return not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permit to delete a project based on its id. Return the deleted entity.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "DELETE /project/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the project to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Project"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/project/:id/note": {
            "get": {
                "description": "Permit to return all the Note entities of a project with the project id.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "note"
                ],
                "summary": "GET /project/:id/note",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Note"
                            }
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/project/:id/task": {
            "get": {
                "description": "Permit to return all the Task entities of a project with the project id.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "GET /project/:id/task",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "description": "Permit to return all the Task entities.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "GET /task",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "post": {
                "description": "Permit to create a new task entity from a JSON object. Task could be linked",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "POST /task",
                "parameters": [
                    {
                        "description": "New task to create",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Permit to update a task entity with a JSON object. Return the updated entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "PATCH /task",
                "parameters": [
                    {
                        "description": "Updated task entity",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided data.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        },
        "/task/:id": {
            "get": {
                "description": "Permit to return a Task entity based on its id.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "GET /task/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the task to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to return not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permit to delete a task based on its id. Return the deleted entity.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "DELETE /task/:id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id of the task to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    },
                    "400": {
                        "description": "Error with the format of the provided id.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "404": {
                        "description": "Entity to delete not found error.",
                        "schema": {
                            "type": "error"
                        }
                    },
                    "500": {
                        "description": "Internal error during the the request handling.",
                        "schema": {
                            "type": "error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Note": {
            "type": "object",
            "properties": {
                "note_content": {
                    "type": "string"
                },
                "note_date": {
                    "type": "string"
                },
                "note_id": {
                    "type": "integer"
                },
                "note_name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                }
            }
        },
        "model.Project": {
            "type": "object",
            "properties": {
                "project_description": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "project_name": {
                    "type": "string"
                },
                "project_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Note"
                    }
                },
                "project_tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Task"
                    }
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer"
                },
                "task_date": {
                    "type": "string"
                },
                "task_duration": {
                    "type": "integer"
                },
                "task_id": {
                    "type": "integer"
                },
                "task_is_complete": {
                    "type": "boolean"
                },
                "task_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Macmahome application",
	Description:      "Backend API for the Macmahome application. It permit to manage all the",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
